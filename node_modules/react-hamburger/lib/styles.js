"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.verticalSlideTransition = exports.topBarPositioning = exports.horizontalSlideTransition = exports.linkContainerSpacing = void 0;

var _styledComponents = require("styled-components");

var clearMixin = (0, _styledComponents.css)(["&::after{content:\"\";clear:both;display:table;}"]);
var linkContainerSpacing = (0, _styledComponents.css)(["", ""], function (_ref) {
  var showTopBar = _ref.showTopBar,
      _ref$theme = _ref.theme,
      hamburger = _ref$theme.hamburger,
      topBar = _ref$theme.topBar;
  return showTopBar || topBar.display ? {
    paddingTop: topBar.height
  } : {
    paddingTop: hamburger.dimensions
  };
});
exports.linkContainerSpacing = linkContainerSpacing;
var linkContainerTransition = (0, _styledComponents.css)(["", ";"], function (_ref2) {
  var speed = _ref2.speed,
      linkContainer = _ref2.theme.linkContainer,
      transition = _ref2.transition;
  return "\n    transition: transform ".concat(speed || linkContainer.speed, "s ").concat(transition || linkContainer.transition, ";\n  ");
});

var horizontalSlideTransition = function horizontalSlideTransition(leftPosition, rightPosition, units) {
  return (0, _styledComponents.css)(["transform:translateX(", "", ");", ";"], function (_ref3) {
    var right = _ref3.right,
        open = _ref3.open,
        location = _ref3.theme.hamburger.location;
    return (// eslint-disable-next-line no-nested-ternary
      right || location === 'right' ? open ? leftPosition : rightPosition : open ? rightPosition : leftPosition
    );
  }, units, linkContainerTransition);
};

exports.horizontalSlideTransition = horizontalSlideTransition;
var topBarPositioning = (0, _styledComponents.css)(["display:flex;top:0;width:100%;z-index:99;", ";", ";"], function (_ref4) {
  var right = _ref4.right,
      hamburger = _ref4.theme.hamburger;
  return "\n    flex-direction: ".concat(right || hamburger.location === 'right' ? 'row-reverse' : 'row', ";\n  ");
}, function (_ref5) {
  var inline = _ref5.inline,
      locked = _ref5.locked,
      topBar = _ref5.theme.topBar;

  if (locked || topBar.locked) {
    if (inline || topBar.inline) {
      return {
        position: 'fixed'
      };
    }

    return {
      float: 'left',
      position: 'sticky',
      clearMixin: clearMixin
    };
  }

  if (inline || topBar.inline) {
    return {
      float: 'left',
      position: 'absolute',
      clearMixin: clearMixin
    };
  }

  return {
    float: 'left',
    position: 'relative',
    clearMixin: clearMixin
  };
});
exports.topBarPositioning = topBarPositioning;

var verticalSlideTransition = function verticalSlideTransition(topPosition, bottomPosition, units) {
  return (0, _styledComponents.css)(["transform:translateY(", "", ");", ";"], function (_ref6) {
    var top = _ref6.top,
        open = _ref6.open,
        location = _ref6.theme.hamburger.location;
    return (// eslint-disable-next-line no-nested-ternary
      top || location === 'top' ? open ? topPosition : bottomPosition : open ? bottomPosition : topPosition
    );
  }, units, linkContainerTransition);
};

exports.verticalSlideTransition = verticalSlideTransition;