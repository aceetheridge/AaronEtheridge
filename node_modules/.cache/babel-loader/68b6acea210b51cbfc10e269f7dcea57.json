{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ReactHamburger = void 0;\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\n\nvar _getPrototypeOf3 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\n\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar deepmerge = _interopRequireWildcard(require(\"deepmerge\"));\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _styledComponents = require(\"styled-components\");\n\nvar _components = require(\"./components\");\n\nvar _Bars = require(\"./components/Bars.react\");\n\nvar _theme = require(\"./theme\");\n\nvar ReactHamburger =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inherits2.default)(ReactHamburger, _React$Component);\n\n  function ReactHamburger() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    (0, _classCallCheck2.default)(this, ReactHamburger);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = (0, _possibleConstructorReturn2.default)(this, (_getPrototypeOf2 = (0, _getPrototypeOf3.default)(ReactHamburger)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"state\", {\n      open: false\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"toggleLinkContainer\", function (value) {\n      return _this.setState({\n        open: value\n      });\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"hamburgerToggle\", function () {\n      var open = _this.state.open;\n      return open ? _this.toggleLinkContainer(false) : _this.toggleLinkContainer(true);\n    });\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"hamburgerTheme\", void 0);\n    return _this;\n  }\n\n  (0, _createClass2.default)(ReactHamburger, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          barColor = _this$props.barColor,\n          barCount = _this$props.barCount,\n          barHeight = _this$props.barHeight,\n          barRadius = _this$props.barRadius;\n      var _this$props2 = this.props,\n          children = _this$props2.children,\n          hamburgerHeight = _this$props2.hamburgerHeight,\n          hamburgerWidth = _this$props2.hamburgerWidth,\n          inline = _this$props2.inline,\n          linkContainerColor = _this$props2.linkContainerColor,\n          linkContainerMaxWidth = _this$props2.linkContainerMaxWidth,\n          linkContainerPadding = _this$props2.linkContainerPadding,\n          linkContainerSpeed = _this$props2.linkContainerSpeed,\n          linkContainerTransition = _this$props2.linkContainerTransition,\n          linkContainerWidth = _this$props2.linkContainerWidth,\n          locked = _this$props2.locked,\n          right = _this$props2.right,\n          showTopBar = _this$props2.showTopBar,\n          slide = _this$props2.slide,\n          theme = _this$props2.theme,\n          topBarColor = _this$props2.topBarColor,\n          topBarGutter = _this$props2.topBarGutter,\n          topBarHeight = _this$props2.topBarHeight,\n          TopContent = _this$props2.TopContent,\n          verticalSlide = _this$props2.verticalSlide;\n      var open = this.state.open;\n      var hamburgerTheme = deepmerge.all([_theme.theme, theme]);\n      var Top = showTopBar || hamburgerTheme.topBar.display ? _components.TopBar : _components.TopContainer;\n      var linkContainer = verticalSlide || hamburgerTheme.linkContainer.vertical ? React.createElement(_components.LinkContainerVertical, {\n        color: linkContainerColor,\n        hamburgerHeight: hamburgerHeight,\n        onClick: this.hamburgerToggle,\n        open: open,\n        padding: linkContainerPadding,\n        speed: linkContainerSpeed,\n        showTopBar: showTopBar,\n        topBarHeight: topBarHeight,\n        transition: linkContainerTransition,\n        width: linkContainerWidth\n      }, children) : React.createElement(_components.LinkContainerHorizontal, {\n        color: linkContainerColor,\n        hamburgerHeight: hamburgerHeight,\n        maxWidth: linkContainerMaxWidth,\n        onClick: this.hamburgerToggle,\n        open: open,\n        padding: linkContainerPadding,\n        right: right,\n        speed: linkContainerSpeed,\n        showTopBar: showTopBar,\n        topBarHeight: topBarHeight,\n        transition: linkContainerTransition,\n        width: linkContainerWidth\n      }, children);\n      return React.createElement(_styledComponents.ThemeProvider, {\n        theme: hamburgerTheme\n      }, React.createElement(React.Fragment, null, React.createElement(Top, {\n        color: topBarColor,\n        height: topBarHeight,\n        gutter: topBarGutter,\n        inline: inline,\n        locked: locked,\n        right: right\n      }, React.createElement(_components.HamburgerIcon, {\n        height: hamburgerHeight,\n        onClick: this.hamburgerToggle,\n        open: open,\n        right: right,\n        slide: slide,\n        speed: linkContainerSpeed,\n        transition: linkContainerTransition,\n        maxWidth: linkContainerMaxWidth,\n        width: hamburgerWidth\n      }, React.createElement(_Bars.Bars, {\n        barColor: barColor,\n        barCount: barCount,\n        barHeight: barHeight,\n        barRadius: barRadius\n      })), React.createElement(_components.TopContentContainer, null, TopContent)), linkContainer));\n    }\n  }]);\n  return ReactHamburger;\n}(React.Component);\n\nexports.ReactHamburger = ReactHamburger;\n(0, _defineProperty2.default)(ReactHamburger, \"defaultProps\", {\n  barCount: 3,\n  theme: _theme.theme,\n  TopContent: null,\n  verticalSlide: false\n});","map":null,"metadata":{},"sourceType":"script"}